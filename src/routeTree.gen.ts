/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as HelpImport } from './routes/help'
import { Route as IndexImport } from './routes/index'
import { Route as RecipesIndexImport } from './routes/recipes/index'
import { Route as MealPlansIndexImport } from './routes/meal-plans/index'
import { Route as RecipesAddImport } from './routes/recipes/add'
import { Route as MealPlansGroceryListImport } from './routes/meal-plans/grocery-list'
import { Route as RecipesRecipeIdIndexImport } from './routes/recipes/$recipeId/index'
import { Route as RecipesRecipeIdEditImport } from './routes/recipes/$recipeId/edit'

// Create/Update Routes

const HelpRoute = HelpImport.update({
  id: '/help',
  path: '/help',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RecipesIndexRoute = RecipesIndexImport.update({
  id: '/recipes/',
  path: '/recipes/',
  getParentRoute: () => rootRoute,
} as any)

const MealPlansIndexRoute = MealPlansIndexImport.update({
  id: '/meal-plans/',
  path: '/meal-plans/',
  getParentRoute: () => rootRoute,
} as any)

const RecipesAddRoute = RecipesAddImport.update({
  id: '/recipes/add',
  path: '/recipes/add',
  getParentRoute: () => rootRoute,
} as any)

const MealPlansGroceryListRoute = MealPlansGroceryListImport.update({
  id: '/meal-plans/grocery-list',
  path: '/meal-plans/grocery-list',
  getParentRoute: () => rootRoute,
} as any)

const RecipesRecipeIdIndexRoute = RecipesRecipeIdIndexImport.update({
  id: '/recipes/$recipeId/',
  path: '/recipes/$recipeId/',
  getParentRoute: () => rootRoute,
} as any)

const RecipesRecipeIdEditRoute = RecipesRecipeIdEditImport.update({
  id: '/recipes/$recipeId/edit',
  path: '/recipes/$recipeId/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/help': {
      id: '/help'
      path: '/help'
      fullPath: '/help'
      preLoaderRoute: typeof HelpImport
      parentRoute: typeof rootRoute
    }
    '/meal-plans/grocery-list': {
      id: '/meal-plans/grocery-list'
      path: '/meal-plans/grocery-list'
      fullPath: '/meal-plans/grocery-list'
      preLoaderRoute: typeof MealPlansGroceryListImport
      parentRoute: typeof rootRoute
    }
    '/recipes/add': {
      id: '/recipes/add'
      path: '/recipes/add'
      fullPath: '/recipes/add'
      preLoaderRoute: typeof RecipesAddImport
      parentRoute: typeof rootRoute
    }
    '/meal-plans/': {
      id: '/meal-plans/'
      path: '/meal-plans'
      fullPath: '/meal-plans'
      preLoaderRoute: typeof MealPlansIndexImport
      parentRoute: typeof rootRoute
    }
    '/recipes/': {
      id: '/recipes/'
      path: '/recipes'
      fullPath: '/recipes'
      preLoaderRoute: typeof RecipesIndexImport
      parentRoute: typeof rootRoute
    }
    '/recipes/$recipeId/edit': {
      id: '/recipes/$recipeId/edit'
      path: '/recipes/$recipeId/edit'
      fullPath: '/recipes/$recipeId/edit'
      preLoaderRoute: typeof RecipesRecipeIdEditImport
      parentRoute: typeof rootRoute
    }
    '/recipes/$recipeId/': {
      id: '/recipes/$recipeId/'
      path: '/recipes/$recipeId'
      fullPath: '/recipes/$recipeId'
      preLoaderRoute: typeof RecipesRecipeIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/help': typeof HelpRoute
  '/meal-plans/grocery-list': typeof MealPlansGroceryListRoute
  '/recipes/add': typeof RecipesAddRoute
  '/meal-plans': typeof MealPlansIndexRoute
  '/recipes': typeof RecipesIndexRoute
  '/recipes/$recipeId/edit': typeof RecipesRecipeIdEditRoute
  '/recipes/$recipeId': typeof RecipesRecipeIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/help': typeof HelpRoute
  '/meal-plans/grocery-list': typeof MealPlansGroceryListRoute
  '/recipes/add': typeof RecipesAddRoute
  '/meal-plans': typeof MealPlansIndexRoute
  '/recipes': typeof RecipesIndexRoute
  '/recipes/$recipeId/edit': typeof RecipesRecipeIdEditRoute
  '/recipes/$recipeId': typeof RecipesRecipeIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/help': typeof HelpRoute
  '/meal-plans/grocery-list': typeof MealPlansGroceryListRoute
  '/recipes/add': typeof RecipesAddRoute
  '/meal-plans/': typeof MealPlansIndexRoute
  '/recipes/': typeof RecipesIndexRoute
  '/recipes/$recipeId/edit': typeof RecipesRecipeIdEditRoute
  '/recipes/$recipeId/': typeof RecipesRecipeIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/help'
    | '/meal-plans/grocery-list'
    | '/recipes/add'
    | '/meal-plans'
    | '/recipes'
    | '/recipes/$recipeId/edit'
    | '/recipes/$recipeId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/help'
    | '/meal-plans/grocery-list'
    | '/recipes/add'
    | '/meal-plans'
    | '/recipes'
    | '/recipes/$recipeId/edit'
    | '/recipes/$recipeId'
  id:
    | '__root__'
    | '/'
    | '/help'
    | '/meal-plans/grocery-list'
    | '/recipes/add'
    | '/meal-plans/'
    | '/recipes/'
    | '/recipes/$recipeId/edit'
    | '/recipes/$recipeId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HelpRoute: typeof HelpRoute
  MealPlansGroceryListRoute: typeof MealPlansGroceryListRoute
  RecipesAddRoute: typeof RecipesAddRoute
  MealPlansIndexRoute: typeof MealPlansIndexRoute
  RecipesIndexRoute: typeof RecipesIndexRoute
  RecipesRecipeIdEditRoute: typeof RecipesRecipeIdEditRoute
  RecipesRecipeIdIndexRoute: typeof RecipesRecipeIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HelpRoute: HelpRoute,
  MealPlansGroceryListRoute: MealPlansGroceryListRoute,
  RecipesAddRoute: RecipesAddRoute,
  MealPlansIndexRoute: MealPlansIndexRoute,
  RecipesIndexRoute: RecipesIndexRoute,
  RecipesRecipeIdEditRoute: RecipesRecipeIdEditRoute,
  RecipesRecipeIdIndexRoute: RecipesRecipeIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/help",
        "/meal-plans/grocery-list",
        "/recipes/add",
        "/meal-plans/",
        "/recipes/",
        "/recipes/$recipeId/edit",
        "/recipes/$recipeId/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/help": {
      "filePath": "help.tsx"
    },
    "/meal-plans/grocery-list": {
      "filePath": "meal-plans/grocery-list.tsx"
    },
    "/recipes/add": {
      "filePath": "recipes/add.tsx"
    },
    "/meal-plans/": {
      "filePath": "meal-plans/index.tsx"
    },
    "/recipes/": {
      "filePath": "recipes/index.tsx"
    },
    "/recipes/$recipeId/edit": {
      "filePath": "recipes/$recipeId/edit.tsx"
    },
    "/recipes/$recipeId/": {
      "filePath": "recipes/$recipeId/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
